public class Polynome {
    private class Monome{
        private double a;
        private int n;
        private Monome next;
    }
    private Monome head;

    // Конструктор полинома (в процессе)
    public Polynome(){

        // TODO метод чтобы не плодить кучу полиномов x-x0 который меняет свободный член
    }

    // Проверка является ли данное число нулём с точностью 4 знака
    private static boolean isZero(double a){
        return false;
    }

    // Метод вставляет текущий полином элемент {val,pow}, если такая степень уже есть, складывает значения
    private void insert(double val, int pow){
        // Проверка если голова пустая
        // Проверка если степень головы меньше pow
        // Проверка если в голове один элемент
        // Создание двух указателей, первого и второго элемента first second
        // Проходим по связному списку пока либо: второй указатель null; степень второго указателя больше или равна pow
        // Если степень второго совпадает, прибавление val (если ноль, удаление)
        // Иначе вставка между
    }

    // Умножение текущего полинома на число
    private void multiply(double a){
        // проход по всем коэффициентов и умножение
    }

    // Умножение текущего полинома на другой полином
    private void multiply(Polynome pal){
        // Проверка pal == null
        // Запоминаем что было в голове и зануляем голову
        // Переменная хранящая начало входного полинома
        // Проход по элементам текущего полинома
        //        Для каждого элемента проходим по всему второму полиному
        //        вставка элемента в обновлённый список insert()
        // head = новый список
    }

    // Метод складывает текущий полином с входящим
    private void sum(Polynome pal){
        // Проход по pal и с помощью insert( ... ) прибавление в текущий полином
    }

    // Метод выводит коэффициенты полинома в экспоненциальном виде
    public void print(){
        // Проход по связному списку, если перескочили через степень выводим ноль
    }

}
